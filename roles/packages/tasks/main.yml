- name: "Install homebrew"
  ansible.builtin.include_role:
    name: geerlingguy.mac.homebrew

- name: "Make sure homebrew bin is in path"
  ansible.builtin.lineinfile:
    path: /etc/paths
    state: present
    line: '/opt/homebrew/bin'
  become: true
  become_user: root

- name: "Get installed cask packages"
  ansible.builtin.command: /opt/homebrew/bin/brew list --casks
  register: brew_casks
  changed_when: false

- name: "Get installed formula packages"
  ansible.builtin.command: /opt/homebrew/bin/brew list --formula
  register: brew_formula
  changed_when: false

- name: "Install core packages via brew casks"
  community.general.homebrew_cask:
    name: "{{ item }}"
    update_homebrew: true
    accept_external_apps: true
  become: true
  become_user: "{{ lookup('env', 'USER') }}"
  failed_when: false
  when: "item not in brew_casks.stdout"
  with_items:
    - google-drive
    - docker
    - google-chrome
    - google-cloud-sdk
    - iterm2
    - slack
    - sublime-text
    - telegram
    - vlc
    - zoom
    - bitwarden
    - notion
    - notion-calendar
    - stats
    - docker
    - spotify
    - whatsapp
    - the-unarchiver
    - keybase
    - warp
    - cursor
    - pritunl
    - dbeaver-community
    - chatgpt
    - utm
    - visual-studio-code
    - another-redis-desktop-manager
    - postman
    - 1password
    - thunderbird
    - libpq
    - redis-insight
    - microsoft-remote-desktop
    - pgadmin4
    - microsoft-teams
    - drawio

- name: "Install formula packages via brew"
  community.general.homebrew:
    name: "{{ item }}"
  failed_when: false
  when: "item not in brew_formula.stdout"
  with_items:
    - aws-iam-authenticator
    - awscli
    - coreutils
    - curl
    - gpg
    - htop
    - kubectx
    - kubernetes-cli
    - libtool
    - libxslt
    - libyaml
    - openssl
    - tmux
    - unixodbc
    - unzip
    - vim
    - xz
    - zsh
    - k9s
    - stern
    - thefuck
    - jq
    - yq
    - helm
    - mas
    - pre-commit
    - languagetool
    - oci-cli
    - gnupg
    - sops
    - htop
    - sops
    - pulumi
    - discord
    - checkov
    - terraform-docs
    - tflint
    - ollama
    - gh
    - pkg-config
    # Dependencies for pnpm canvas package
    - cairo
    - pango
    - pixman
    - dnsmasq
    - libpng
    - jpeg
    - gitlib
    - librsvg
    - pixman
    - 1password-cli
    - krr
    - watch
    - k6
    - kustomize
    - act
    - libpq
    - minikube


- name: "Remove unwanted packages"
  community.general.homebrew:
    name: "{{ item }}"
    state: absent
  with_items:
    - virtualbox

- name: "Install apps from mac store"
  community.general.mas:
    id:
      - 472790630 # olive tree bible
      - 497799835 # xcode
      - 408981434 # imovie
      - 6447783111 # Sider: Ask AI Chat Bot, Writer
      - 6714467650 # Perplexity
    state: present

- name: "Install dnsmasq"
  community.general.homebrew:
    name: dnsmasq
    state: present
  when: "'dnsmasq' not in brew_formula.stdout"

- name: "Create dnsmasq configuration"
  ansible.builtin.template:
    src: dnsmasq.conf.j2
    dest: /usr/local/etc/dnsmasq.conf
    mode: '0644'
  become: true

- name: "Start dnsmasq service"
  ansible.builtin.command: brew services start dnsmasq
  register: dnsmasq_service
  changed_when: "'Successfully started' in dnsmasq_service.stdout"
  failed_when: false

- name: "Create resolver directory"
  ansible.builtin.file:
    path: /etc/resolver
    state: directory
    mode: '0755'
  become: true

- name: "Configure resolver for scalis.loc"
  ansible.builtin.template:
    src: resolver.j2
    dest: /etc/resolver/scalis.loc
    mode: '0644'
  become: true
